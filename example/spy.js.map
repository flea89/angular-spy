{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "/Users/paolo/workspace/ng-spy/src/js/scroll-container/scroll-container.directive.js",
    "/Users/paolo/workspace/ng-spy/src/js/spies/visible.directive.js",
    "/Users/paolo/workspace/ng-spy/src/js/spy.js",
    "/Users/paolo/workspace/ng-spy/src/js/utils/debounce.service.js",
    "/Users/paolo/workspace/ng-spy/src/js/utils/window-scroll-helper.service.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "import debounce from '../utils/debounce.service';\nimport windowScrollHelper from '../utils/window-scroll-helper.service';\n\nconst mod = angular.module('spy.scrollSpy.scrollContainer', [\n    debounce.name,\n    windowScrollHelper.name\n]);\n\nmod.directive('spyScrollContainer', ['$window', '$timeout', 'spyDebounce', 'windowScrollGetter', ($window, $timeout, spyDebounce, windowScrollGetter) => {\n    return {\n        restrict: 'A',\n        controller: ['$scope', '$element', function ($scope, $element) {\n            this.spies = [];\n            this.registerSpy = (spy) => {\n                this.spies.push(spy);\n            };\n\n            this.getScrollContainer = () => {\n                return $element[0];\n            };\n        }],\n        link (scope, elem, attrs, selfCtrl) {\n            const afTimeout = 400;\n            let vpHeight,\n                $aWindow = angular.element($window),\n                $scrollTopReference = elem[0].tagName === 'BODY' ? windowScrollGetter() : elem,\n                $scroller = elem[0].tagName === 'BODY' ?\n                    $aWindow : elem,\n                animationFrame,\n                lastScrollTimestamp = 0,\n                scrollPrevTimestamp = 0,\n                previousScrollTop = 0;\n\n            function onScroll() {\n                lastScrollTimestamp = $window.performance.now();\n                if (!animationFrame) {\n                    animationFrame = $window.requestAnimationFrame(onAnimationFrame);\n                }\n                scrollPrevTimestamp = $window.performance.now();\n            }\n\n            function onResize() {\n                vpHeight = Math.max($window.document.documentElement.clientHeight, window.innerHeight || 0);\n                selfCtrl.spies.forEach((spy)=> {\n                    spy.updateClientRect();\n                });\n                onScroll();\n            }\n\n            function onAnimationFrame() {\n                const viewportRect = getViewportRect(),\n                        timestamp = $window.performance.now(),\n                        delta = timestamp - scrollPrevTimestamp,\n                        scrollDelta = viewportRect.top - previousScrollTop,\n                        scrollDirection = scrollDelta === 0 ? 0 :\n                            scrollDelta / Math.abs(scrollDelta);\n\n                selfCtrl.spies.forEach((spy)=> {\n                    spy.update(viewportRect, scrollDirection);\n                });\n\n                previousScrollTop = viewportRect.top;\n\n                if (delta < afTimeout) {\n                    queueAf();\n                } else {\n                    cancelAf();\n                }\n            }\n\n            function getViewportRect() {\n                const currentScroll = $scrollTopReference[0].scrollTop;\n                return {\n                    top: currentScroll,\n                    height: vpHeight\n                };\n            }\n\n            function queueAf() {\n                animationFrame = $window.requestAnimationFrame(onAnimationFrame);\n            }\n\n            function cancelAf() {\n                $window.cancelAnimationFrame(animationFrame);\n                animationFrame = null;\n            }\n\n            scope.$on('spyScrollContainer:updateSpies', onResize);\n\n            if (angular.isDefined(attrs.triggerUpdate)) {\n                scope.$watch(attrs.triggerUpdate, function (newVal, oldVal) {\n                    if (newVal !== oldVal) {\n                        $timeout(function () {\n                            onResize();\n                        }, 0);\n                    }\n                });\n            }\n\n            $aWindow.on('resize', spyDebounce(onResize, 300));\n            $scroller.on('scroll', onScroll);\n            $timeout(onResize);\n        }\n    };\n}]);\n\nexport default mod;\n",
    "const mod = angular.module('spy.scrollSpy.visible', []);\n\nmod.directive('spyVisible', ['$window', '$parse', '$timeout', ($window, $parse, $timeout) => {\n    return {\n        restrict: 'A',\n        require: '^^spyScrollContainer',\n        link (scope, elem, attrs, ctrl) {\n            let rect = {},\n                hidden = false,\n                scrollContainer,\n                api = {\n                    updateClientRect () {\n                        let clientRect = elem[0].getBoundingClientRect();\n                        rect.top = clientRect.top + scrollContainer.scrollTop;\n                        rect.left = clientRect.left + scrollContainer.scrollLeft;\n                        rect.width = clientRect.width;\n                        rect.height = clientRect.height;\n                        hidden = elem[0].offsetParent === null;\n                    },\n                    update (viewportRect) {\n                        let isFullyVisible = (rect.top >= viewportRect.top && //Top border in viewport\n                            (rect.top + rect.height) <= (viewportRect.top + viewportRect.height)) || //Bottom border in viewport\n                            (rect.top <= viewportRect.top && rect.top + rect.height >= viewportRect.top + viewportRect.height), // Bigger than viewport\n\n                            isFullyHidden = !isFullyVisible &&\n                            rect.top > (viewportRect.top + viewportRect.height) || //Top border below viewport bottom\n                            (rect.top + rect.height) < viewportRect.top; //Bottom border above viewport top\n\n                        //Only change state when fully visible/hidden\n                        if (isFullyVisible) {\n                            api.setInView(true);\n                        } else if (isFullyHidden) {\n                            api.setInView(false);\n                        }\n                    },\n                    getRect () {\n                        return rect;\n                    },\n                    setInView (inView) {\n                        if ($parse(attrs.spyVisible)(scope) !== inView && !hidden) {\n                            scope.$evalAsync(() => {\n                                const spyVisibleSetter = $parse(attrs.spyVisible);\n                                spyVisibleSetter.assign(scope, inView);\n                            });\n                        }\n                    }\n                };\n            if (angular.isDefined(attrs.triggerUpdate)) {\n                scope.$watch(attrs.triggerUpdate, function (newVal, oldVal) {\n                    if (newVal !== oldVal) {\n                        $timeout(function () {\n                            api.updateClientRect();\n                            api.update();\n                        }, 0);\n                    }\n                });\n            }\n\n            scrollContainer = ctrl.getScrollContainer() || $window.document.body;\n            ctrl.registerSpy(api);\n            api.updateClientRect();\n        }\n    };\n}]);\n\nexport default mod;\n",
    "import scrollSpy from './scroll-container/scroll-container.directive';\nimport spy from './spies/visible.directive';\n\nvar mod = angular.module('ngSpy', [\n    scrollSpy.name,\n    spy.name\n]);\n\n//TODO: The current implementation works for scroll spies on the\n// body element and for scroll divs when no parents are scrollable.\n// The case where we have nested scroll elements has to be investigated.\n\nexport default mod;\n",
    "const mod = angular.module('spy.utils.debounce', []);\n\nmod.factory('spyDebounce', ['$timeout', '$q', ($timeout, $q) => {\n    return (func, wait, immediate) => {\n        let timeout,\n            deferred = $q.defer();\n\n        return (...args) => {\n            const context = this,\n                later = () => {\n                    timeout = null;\n                    if (!immediate) {\n                        deferred.resolve(func.apply(context, args));\n                        deferred = $q.defer();\n                    }\n                },\n                callNow = immediate && !timeout;\n            if (timeout) {\n                $timeout.cancel(timeout);\n            }\n            timeout = $timeout(later, wait);\n            if (callNow) {\n                deferred.resolve(func.apply(context, args));\n                deferred = $q.defer();\n            }\n            return deferred.promise;\n        };\n    };\n}]);\n\nexport default mod;\n",
    "const mod = angular.module('spy.utils.windowScrollHelper', []);\n\nmod.factory('windowScrollGetter', ['$window', ($window) => {\n    return () => {\n        const docEl = $window.document.documentElement;\n        let scrollContainer;\n\n        docEl.scrollTop = 1;\n\n        if (docEl.scrollTop === 1) {\n            docEl.scrollTop = 0;\n            scrollContainer = docEl;\n        } else {\n            scrollContainer = $window.document.body;\n        }\n\n        return angular.element(scrollContainer);\n    };\n}]);\n\nexport default mod;\n"
  ]
}